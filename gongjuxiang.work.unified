server {
    server_name gongjuxiang.work www.gongjuxiang.work;
    
    root /home/ubuntu/PhotoEnhanceAI-web/photo-enhancer/dist;
    index index.html;
    
    # 启用gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    # 微信支付API代理配置 - 保持不变
    location /api/wechat/ {
        proxy_pass https://127.0.0.1:8443/api/wechat/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 处理大文件上传
        client_max_body_size 100M;
        proxy_read_timeout 300s;
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        
        # SSL验证
        proxy_ssl_verify off;
    }
    
    # 所有其他API请求统一通过API网关
    # 后端GPU服务器IP只需在 /home/ubuntu/PhotoEnhanceAI-web/api-gateway/gateway_config.json 配置
    location /api/ {
        proxy_pass https://127.0.0.1:8443/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 跳过内部SSL证书验证（本地127.0.0.1通信）
        proxy_ssl_verify off;
        
        # 处理大文件上传
        client_max_body_size 100M;
        proxy_read_timeout 300s;
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        
        # 支持文件下载
        proxy_buffering off;
    }
    
    # 处理Vue Router的history模式
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # 静态资源缓存
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # 安全头
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/gongjuxiang.work/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/gongjuxiang.work/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = www.gongjuxiang.work) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = gongjuxiang.work) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    server_name gongjuxiang.work www.gongjuxiang.work;
    return 404; # managed by Certbot
}
